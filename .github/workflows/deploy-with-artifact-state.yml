name: Deploy with Artifact State (Dev/Test)

on:
  workflow_dispatch:  # Nur manuell f√ºr Testing

env:
  PYTHON_VERSION: '3.9'
  TERRAFORM_VERSION: '1.5.7'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download previous state
      uses: actions/download-artifact@v3
      with:
        name: terraform-state
        path: ./terraform
      continue-on-error: true  # Erster Run hat noch keinen State

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Build and package
      run: |
        chmod +x packDependencies.sh
        ./packDependencies.sh
        python3 createZip.py

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Terraform Init (local backend)
      working-directory: ./terraform
      run: |
        # Nutze lokalen State
        terraform init -reconfigure

    - name: Terraform Apply
      working-directory: ./terraform
      env:
        TF_VAR_domain_name: ${{ secrets.OTC_DOMAIN_NAME }}
        TF_VAR_tenant_name: ${{ secrets.OTC_TENANT_NAME }}
        TF_VAR_region: ${{ secrets.OTC_REGION }}
        TF_VAR_access_key: ${{ secrets.OTC_ACCESS_KEY }}
        TF_VAR_secret_key: ${{ secrets.OTC_SECRET_KEY }}
      run: terraform apply -auto-approve

    - name: Upload new state
      if: always()  # Auch bei Fehlern State speichern
      uses: actions/upload-artifact@v3
      with:
        name: terraform-state
        path: |
          ./terraform/terraform.tfstate
          ./terraform/terraform.tfstate.backup
        retention-days: 30